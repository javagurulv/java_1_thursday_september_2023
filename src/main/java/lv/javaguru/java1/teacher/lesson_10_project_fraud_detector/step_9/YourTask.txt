Одна из возможностей упростить класс FraudDetector кроется
в снятии с него ответственности за реализацию каждого правила
обнаружения мошенничества.

Каждое правило - это по сути отдельная программа,
которая может быть выполнена в независимости от всех остальных правил.

Следуя Single Responsibility Principle предлагаем код
каждого правила реализовать в собственном классе!

Тогда у классов правил будет только одна ответственность
(реализация одного правила) и одна причина для того, чтобы
менять код в таких классах (код в классах правил будет меняться
только тогда, когда будут меняться сами правила).

Так как все правила очень похожи друг на друга:
- они принимают на вход транзакцию;
- они проверяют разные параметры транзакции;
- они возвращают true/false в качестве результата;
поэтому можно создать для них общий интерфейс, например FraudRule:

interface FraudRule {

    boolean isFraud(Transaction t);

}

Создайте интерфейс FraudRule и реализуйте его для каждого правила
в отдельности. Не забудьте создать тесты для каждого нового класса!